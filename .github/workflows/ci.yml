name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  JAVA_VERSION: '24'
  MAVEN_OPTS: '-Xmx2048m -XX:+UseG1GC'

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
        
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Verify Java version
      run: |
        java -version
        javac -version
        mvn -version
        
    - name: Run tests
      run: mvn clean verify -Pci
      
    - name: Run platform-specific tests (macOS)
      if: matrix.os == 'macos-latest'
      run: mvn test -Dtest=**/*MacOS*Test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests (${{ matrix.os }})
        path: target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        file: target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: |
          target/surefire-reports/
          target/failsafe-reports/
          target/site/jacoco/

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Run code formatting check
      run: mvn spotless:check
      
    - name: Run static analysis
      run: |
        mvn compile
        mvn spotbugs:check
        mvn pmd:check
        mvn checkstyle:check
        
    - name: Run dependency vulnerability check
      run: mvn org.owasp:dependency-check-maven:check
      
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-quality-reports
        path: |
          target/spotbugs.xml
          target/pmd.xml
          target/checkstyle-result.xml
          target/dependency-check-report.html

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java
        
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build for CodeQL
      run: mvn clean compile -DskipTests
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Run performance benchmarks
      run: mvn clean test -Pperformance
      
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: target/jmh-results.json

  build-native:
    name: Build Native Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
        
    - name: Build native image
      run: |
        mvn clean package -DskipTests
        native-image -jar target/mtu-validator-*.jar mtu-validator-native
        
    - name: Test native image
      run: |
        ./mtu-validator-native validate --value 1500
        ./mtu-validator-native info --standards
        
    - name: Upload native binary
      uses: actions/upload-artifact@v4
      with:
        name: native-binary
        path: mtu-validator-native

  integration-test:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Run integration tests
      run: mvn clean verify -Pfailsafe
      
    - name: Test CLI functionality
      run: |
        mvn package -DskipTests
        java -jar target/mtu-validator-*.jar validate --value 1500
        java -jar target/mtu-validator-*.jar info
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results-${{ matrix.os }}
        path: target/failsafe-reports/

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Generate JavaDoc
      run: mvn javadoc:javadoc
      
    - name: Generate site documentation
      run: mvn site
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/site
        
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: target/site/

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, code-quality, security-scan]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.code-quality.result == 'success'
      run: echo "✅ All checks passed successfully!"
      
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.code-quality.result == 'failure'
      run: |
        echo "❌ Some checks failed!"
        exit 1
